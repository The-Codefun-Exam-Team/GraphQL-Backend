package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.22

import (
	"context"
	"fmt"

	"github.com/The-Codefun-Exam-Team/GraphQL-Backend/graph/model"
)

// Users is the resolver for the users field.
func (r *queryResolver) Users(ctx context.Context, id int) (*model.DebugUser, error) {
	panic(fmt.Errorf("not implemented: Users - users"))
}

// Problems is the resolver for the problems field.
func (r *queryResolver) Problems(ctx context.Context, page *int, limit *int, id *int) ([]*model.DebugProblem, error) {
	panic(fmt.Errorf("not implemented: Problems - problems"))
}

// Submissions is the resolver for the submissions field.
func (r *queryResolver) Submissions(ctx context.Context, page *int, limit *int, id *int) ([]*model.DebugSubmission, error) {
	panic(fmt.Errorf("not implemented: Submissions - submissions"))
}

// Groups is the resolver for the groups field.
func (r *queryResolver) Groups(ctx context.Context, page *int, limit *int, id *int) ([]*model.DebugGroup, error) {
	panic(fmt.Errorf("not implemented: Groups - groups"))
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
